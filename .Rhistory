caption = "Data Source: NHS")
ggplotly(gr_int1) %>% style(textposition = "top")
gr_int0 <- ggplot(data = df_proc,
mapping = aes(x = DATE,
y = DIAG_RATE_65_PLUS,
colour = ORG_CODE)) +
#customise y axis
ylim(c(55, 80)) +
#add the lines to the chart
geom_point() +
geom_line(size = 1, alpha =0.9) +
geom_hline(yintercept = 66.7, linetype = 2, size = 1, colour = "black") +
annotate("text", x = as.Date("2016-10-31"), 66.7, vjust = -0.5, label = "Benchmark rate", size = 4) +
shadowtext::geom_shadowtext(data = df_proc,
mapping = aes (x = DATE,
y = DIAG_RATE_65_PLUS,
label = NAME),
hjust=-0.1, vjust = 0, bg.color = "white") +
# use the palette Safe from the rcartocolor package
scale_color_brewer(palette = "Spectral") +
# facet_wrap(~NAME) +
facet_wrap(~FACET_ORDER, ncol = 1, labeller = labeller(FACET_ORDER =
c("1" = "Regional Trends",
"2" = "National Trend"))) +
#coord_flip()+
theme_bw() +
# customise the theme a bit more
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
# remove legend
legend.position = "none",
# change margin size
plot.margin = margin(1,1,1,1,"mm")) +
labs(x = "Month",
y = "Dementia diagnoses rate",
title = "Dementia diagnose rates in England",
caption = "Data Source: NHS") +
transition_reveal(DATE) #activates display of time series
animate(gr_int0, #control speed of animation
fps = 7, #control immediate repetition of animation, so viewers have time to digest trends
end_pause = 35)
ggplotly(gr_int1) %>%
style(textposition = "top") %>%
tooltip = "text"
ggplotly(gr_int1, tooltip = "text") %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = "x") %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = "y") %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", "x", "city") %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", "x", "city") %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", "x", "city")) %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", "x", "y")) %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", as.character("x"), "y")) %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", "x"), "y")) %>%
ggplotly(gr_int1, tooltip = c("text", "x"), "y") %>%
style(textposition = "top", hoverinfo = "skip")
ggplotly(gr_int1, tooltip = c("text", "x"), "y") %>%
style(textposition = "top", hoverinfo = "skip")
ggplotly(gr_int1, tooltip = c("text", "x"), "y") %>%
style(hoverinfo = "skip")
ggplotly(gr_int1, tooltip = c("text", "x"), "y") %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", "x", "y") %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", "x", "y")) %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", "x", "y")), %>%
ggplotly(gr_int1, tooltip = c("text", "x", "y")) %>%
style(textposition = "top", hoverinfo = "skip")
?hoverinfo
??hoverinfo
ggplotly(gr_int1, tooltip = c("text", "x", "y")) %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", "x = Date", "y")) %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", "x", "y")) %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", "x", "y")) %>%
style(textposition = "top") %>%
layout(hovermode = "x", text = "y")
ggplotly(gr_int1) %>%
style(textposition = "top") %>%
layout(hovermode = "x", text = "y")
ggplotly(gr_int1) %>%
style(textposition = "top") %>%
layout(hovermode = "x", text = "y")
ggplotly(gr_int1) %>%
style(textposition = "top") %>%
layout(hovermode = "x", text = "y")
ggplotly(gr_int1, tooltip = c("text", "x", "y")) %>%
style(textposition = "top")
ggplotly(gr_int1, tooltip = c("text", "x", "y")) %>%
style(textposition = "top") %>%
layout(hovermode = "x unified")
?ggplotly
ggplotly(gr_int1, tooltip = c("text", "x", "y")) %>%
style(textposition = "top") %>%
layout(hovermode = "x unified") %>%
ggplotly(gr_int1, tooltip = c("text", "x", "y")) %>%
style(textposition = "top") %>%
layout(hovermode = "x unified")
gr_int0 <- ggplot(data = df_proc,
mapping = aes(x = DATE,
y = DIAG_RATE_65_PLUS,
colour = ORG_CODE)) +
#customise y axis
ylim(c(55, 80)) +
#add the lines to the chart
geom_point() +
geom_line(size = 1, alpha =0.9) +
geom_hline(yintercept = 66.7, linetype = 2, size = 1, colour = "black") +
annotate("text", x = as.Date("2016-10-31"), 66.7, vjust = -0.5, label = "Benchmark rate", size = 4) +
shadowtext::geom_shadowtext(data = df_proc,
mapping = aes (x = DATE,
y = DIAG_RATE_65_PLUS,
label = NAME),
hjust=-0.1, vjust = 0, bg.color = "white") +
# use the palette Safe from the rcartocolor package
scale_color_brewer(palette = "Pastel1") +
# facet_wrap(~NAME) +
facet_wrap(~FACET_ORDER, ncol = 1, labeller = labeller(FACET_ORDER =
c("1" = "Regional Trends",
"2" = "National Trend"))) +
#coord_flip()+
theme_bw() +
# customise the theme a bit more
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
# remove legend
legend.position = "none",
# change margin size
plot.margin = margin(1,1,1,1,"mm")) +
labs(x = "Month",
y = "Dementia diagnoses rate",
title = "Dementia diagnose rates in England",
caption = "Data Source: NHS") +
transition_reveal(DATE) #activates display of time series
animate(gr_int0, #control speed of animation
fps = 7, #control immediate repetition of animation, so viewers have time to digest trends
end_pause = 35)
gr_int0 <- ggplot(data = df_proc,
mapping = aes(x = DATE,
y = DIAG_RATE_65_PLUS,
colour = ORG_CODE)) +
#customise y axis
ylim(c(55, 80)) +
#add the lines to the chart
geom_point() +
geom_line(size = 1, alpha =0.9) +
geom_hline(yintercept = 66.7, linetype = 2, size = 1, colour = "black") +
annotate("text", x = as.Date("2016-10-31"), 66.7, vjust = -0.5, label = "Benchmark rate", size = 4) +
shadowtext::geom_shadowtext(data = df_proc,
mapping = aes (x = DATE,
y = DIAG_RATE_65_PLUS,
label = NAME),
hjust=-0.1, vjust = 0, bg.color = "white") +
# use the palette Safe from the rcartocolor package
scale_color_brewer(palette = "Spectral") +
# facet_wrap(~NAME) +
facet_wrap(~FACET_ORDER, ncol = 1, labeller = labeller(FACET_ORDER =
c("1" = "Regional Trends",
"2" = "National Trend"))) +
#coord_flip()+
theme_bw() +
# customise the theme a bit more
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
# remove legend
legend.position = "none",
# change margin size
plot.margin = margin(1,1,1,1,"mm")) +
labs(x = "Month",
y = "Dementia diagnoses rate",
title = "Dementia diagnose rates in England",
caption = "Data Source: NHS") +
transition_reveal(DATE) #activates display of time series
animate(gr_int0, #control speed of animation
fps = 7, #control immediate repetition of animation, so viewers have time to digest trends
end_pause = 35)
gr_int0 <- ggplot(data = df_proc,
mapping = aes(x = DATE,
y = DIAG_RATE_65_PLUS,
colour = ORG_CODE)) +
#customise y axis
ylim(c(55, 80)) +
#add the lines to the chart
geom_point() +
geom_line(size = 1, alpha =0.9) +
geom_hline(yintercept = 66.7, linetype = 2, size = 1, colour = "black") +
annotate("text", x = as.Date("2016-10-31"), 66.7, vjust = -0.5, label = "Benchmark rate", size = 4) +
shadowtext::geom_shadowtext(data = df_proc,
mapping = aes (x = DATE,
y = DIAG_RATE_65_PLUS,
label = NAME),
hjust=-0.1, vjust = 0, bg.color = "white") +
# use the palette Safe from the rcartocolor package
scale_color_brewer(palette = "BrBG") +
# facet_wrap(~NAME) +
facet_wrap(~FACET_ORDER, ncol = 1, labeller = labeller(FACET_ORDER =
c("1" = "Regional Trends",
"2" = "National Trend"))) +
#coord_flip()+
theme_bw() +
# customise the theme a bit more
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
# remove legend
legend.position = "none",
# change margin size
plot.margin = margin(1,1,1,1,"mm")) +
labs(x = "Month",
y = "Dementia diagnoses rate",
title = "Dementia diagnose rates in England",
caption = "Data Source: NHS") +
transition_reveal(DATE) #activates display of time series
animate(gr_int0, #control speed of animation
fps = 7, #control immediate repetition of animation, so viewers have time to digest trends
end_pause = 35)
gr_int0 <- ggplot(data = df_proc,
mapping = aes(x = DATE,
y = DIAG_RATE_65_PLUS,
colour = ORG_CODE)) +
#customise y axis
ylim(c(55, 80)) +
#add the lines to the chart
geom_point() +
geom_line(size = 1, alpha =0.9) +
geom_hline(yintercept = 66.7, linetype = 2, size = 1, colour = "black") +
annotate("text", x = as.Date("2016-10-31"), 66.7, vjust = -0.5, label = "Benchmark rate", size = 4) +
shadowtext::geom_shadowtext(data = df_proc,
mapping = aes (x = DATE,
y = DIAG_RATE_65_PLUS,
label = NAME),
hjust=-0.1, vjust = 0, bg.color = "white") +
# use the palette Safe from the rcartocolor package
scale_color_brewer(palette = "Set3") +
# facet_wrap(~NAME) +
facet_wrap(~FACET_ORDER, ncol = 1, labeller = labeller(FACET_ORDER =
c("1" = "Regional Trends",
"2" = "National Trend"))) +
#coord_flip()+
theme_bw() +
# customise the theme a bit more
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
# remove legend
legend.position = "none",
# change margin size
plot.margin = margin(1,1,1,1,"mm")) +
labs(x = "Month",
y = "Dementia diagnoses rate",
title = "Dementia diagnose rates in England",
caption = "Data Source: NHS") +
transition_reveal(DATE) #activates display of time series
animate(gr_int0, #control speed of animation
fps = 7, #control immediate repetition of animation, so viewers have time to digest trends
end_pause = 35)
library(tidyverse)
library(gghighlight)
library(rmarkdown)
library(purrr)
library(lubridate)
library(gganimate)
library(RColorBrewer)
library(jcolors)
library(plotly)
library(plyr)
library(highcharter)
df_2017 <- read.csv("dem-diag-ind-phe-Apr-2017.csv") #data period start: May 2016
df_2018 <- read.csv("dem-diag-ind-phe-Apr-2018.csv")
df_2019 <- read.csv("dem-diag-ind-phe-Apr-2019.csv")
df_2020 <- read.csv("dem-diag-ind-phe-Apr-2020.csv")
df_2021 <- read.csv("dem-diag-ind-phe-Apr-2021.csv") #data period end: April 2021
names(df_2017) #returns the names of the variables in a data frame
#use paged_Table to make table output neat for publishing
paged_table(sample_n(df_2017, 10)) #returns a random sample of 10 observations
class(df_2017$ACH_DATE) #returns the class type as a character rather than a date, used df_2017 as example
#create a list of the data frames so changes are applied to all of them
list_dfs <- list(df_2017, df_2018, df_2019, df_2020, df_2021)
#use map_dfr and pipes to create the processed data frame. I chose this method because all data sets were structured identically - thank you, NHS!
df_proc <- map_dfr(list_dfs, ~{
.x %>% #create a new date variable (DATE) by converting the old dates into the correct format
mutate(DATE = as.Date(ACH_DATE, format = "%d%B%Y")) %>% #split the values of the MEASURE variable so each measure is now its own variable
pivot_wider(
names_from = MEASURE,
values_from = VALUE) %>% #filter data using the ORG_TYPE codes that correspond to England and its regions
filter(ORG_TYPE == "PHE_CENTRE" | ORG_TYPE == "COUNTRY_GEOGRAPHICAL")})
class(df_proc$DATE) #verify that class type is indeed a date
paged_table(sample_n(df_proc, 10)) #returns a random sample of the processed data frame in a neat output
ggplot(data = df_proc,
mapping = aes(x = DATE,
y = DIAG_RATE_65_PLUS,
colour = NAME)) +
#customise y axis
ylim(c(50, 80)) +
#use geom_line to show regions as lines
geom_line(size = 1, alpha =0.9) +
#use geom_hline to set the benchmark rate
geom_hline(yintercept = 66.7, linetype = 1, size = 1, colour = "dark grey") +
# use the palette Safe from the rcartocolor package
scale_color_brewer(palette = "Paired") +
#customise theme to plain black and white
theme_bw() +
#assign labels
labs(x = "Year",
y = "Dementia diagnoses rate",
title = "Dementia diagnosis rates in England",
caption = "Data Source: NHS")
#correct "yorkshire and humber" to "yorkshire and the humber"
df_proc$NAME [df_proc$NAME == "YORKSHIRE AND HUMBER"] <- "YORKSHIRE AND THE HUMBER"
#use revalue to rename regions so they are no longer in all capitals
df_proc$NAME <- revalue(df_proc$NAME,
c("ENGLAND" = "England",
"LONDON" = "London",
"WEST MIDLANDS" = "West Midlands",
"NORTH EAST" = "North East",
"YORKSHIRE AND THE HUMBER" = "Yorkshire and the Humber",
"EAST MIDLANDS" = "East Midlands",
"EAST OF ENGLAND" = "East of England",
"NORTH WEST" = "North West",
"SOUTH EAST" = "South East",
"SOUTH WEST" = "South West"))
#use 'data.frame' and 'complete' to ensure that the region and date combinations are stable.
#this line is essential because graphs were still depicting Yorkshire and the Humber incorrectly in a working version of this project where I did not use such code
df_proc <- data.frame(complete(df_proc, DATE, NAME))
ggplot(data = df_proc,
mapping = aes(x = DATE,
y = DIAG_RATE_65_PLUS,
colour = NAME)) +
#customise y axis
ylim(c(50, 80)) +
scale_x_date(limits = as.Date(c("2016-05-31","2021-04-30")), date_breaks = "6 month", date_labels =  "%b %Y", expand = c(0.02,0)) +
#use geom_line to show regions as lines
geom_line(size = 1, alpha =0.9) +
geom_hline(yintercept = 66.7, linetype = 2, size = 1, colour = "black") +
annotate("text", x = as.Date("2016-10-31"), 66.7, vjust = -0.5, label = "Benchmark rate", size = 4,) +
# use the palette Safe from the rcartocolor package
scale_color_brewer(palette = "Spectral") +
#customise theme to plain black and white
theme_bw() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
# change margin size, value order top, right, bottom, left
plot.margin = margin(1,1,1,1,"mm")) +
#assign labels
labs(x = "Month",
y = "Dementia diagnoses rate",
title = "Dementia diagnosis rates in England",
caption = "Data Source: NHS")
gr_int0 <- ggplot(data = df_proc,
mapping = aes(x = DATE,
y = DIAG_RATE_65_PLUS,
colour = ORG_CODE)) +
#customise y axis
ylim(c(50, 80)) +
scale_x_date(limits = as.Date(c("2016-05-31","2021-11-30")), date_breaks = "9 month", date_labels =  "%b %Y", expand = c(.02,0)) +
#add the lines to the chart
geom_point() +
geom_line(size = 1) +
geom_hline(yintercept = 66.7, linetype = 2, size = 1, colour = "black") +
annotate("text", x = as.Date("2016-10-31"), 66.7, vjust = -0.5, label = "Benchmark rate", size = 4) +
shadowtext::geom_shadowtext(data = df_proc,
mapping = aes (x = DATE,
y = DIAG_RATE_65_PLUS,
label = NAME),
hjust=-0.1, vjust = 0, bg.color = "white") +
scale_color_jcolors(palette = "pal8") +
theme_bw() +
# customise the theme a bit more
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
# remove legend
legend.position = "none",
# change margin size
plot.margin = margin(1,1,1,1,"mm")) +
labs(x = "Month",
y = "Dementia diagnoses rate",
title = "Dementia diagnose rates in England",
caption = "Data Source: NHS") +
transition_reveal(DATE) #activates display of time series
animate(gr_int0, #control speed of animation
fps = 7, #control immediate repetition of animation, so viewers have time to digest trends
end_pause = 30)
#make a dummy variable for face_wrap later, future 'you' will thank me later
df_proc <- df_proc %>% #make new variable by revaluing ORG_TYPE
mutate(FACET_ORDER = revalue(ORG_TYPE,
c("PHE_CENTRE" = 1,
"COUNTRY_GEOGRAPHICAL" = 2)
)
)
gr_int1 <- ggplot(data = df_proc,
mapping = aes(x = DATE,
y = DIAG_RATE_65_PLUS,
colour = ORG_CODE)) +
#customise y axis
ylim(c(55, 80)) +
scale_x_date(limits = as.Date(c("2016-05-31","2021-11-30")), date_breaks = "6 month", date_labels =  "%b %Y", expand = c(.02,0)) +
#add the lines to the chart
geom_point() +
geom_line(size = 1) +
geom_hline(yintercept = 66.7, linetype = 2, size = 1, colour = "black") +
annotate("text", x = as.Date("2016-10-31"), 66.7, vjust = -0.5, label = "Benchmark rate", size = 4) +
shadowtext::geom_shadowtext(data = df_proc,
mapping = aes (x = DATE,
y = DIAG_RATE_65_PLUS,
label = NAME),
hjust=-0.1, vjust = 0, bg.color = "white") +
# use the palette Safe from the rcartocolor package
scale_color_jcolors(palette = "pal8") +
# facet_wrap(~NAME) +
facet_wrap(~FACET_ORDER, ncol = 1, labeller = labeller(FACET_ORDER =
c("1" = "Regional Trends",
"2" = "National Trend"))) +
#coord_flip()+
theme_bw() +
# customise the theme a bit more
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
# remove legend
legend.position = "none",
# change margin size
plot.margin = margin(1,1,1,1,"mm")) +
labs(x = "Month",
y = "Dementia diagnoses rate",
title = "Dementia diagnose rates in England",
caption = "Data Source: NHS") +
transition_reveal(DATE) #activates display of time series
animate(gr_int1, #control speed of animation
fps = 7, #control immediate repetition of animation, so viewers have time to digest trends
end_pause = 35)
gr_int2 <- ggplot(data = df_proc,
mapping = aes(x = DATE,
y = DIAG_RATE_65_PLUS,
colour = ORG_CODE)) +
#customise y axis
ylim(c(55, 80)) +
scale_x_date(limits = as.Date(c("2016-05-31","2021-04-30")), date_breaks = "12 month", date_labels =  "%b %Y", expand = c(.02,0)) +
#add the lines to the chart
geom_point() +
geom_line(size = 1) +
geom_hline(yintercept = 66.7, linetype = 2, size = 1, colour = "black") +
annotate("text", x = as.Date("2017-05-31"), 66.7, vjust = -0.5, label = "Benchmark rate", size = 4) +
shadowtext::geom_shadowtext(data = df_proc,
mapping = aes (x = DATE,
y = DIAG_RATE_65_PLUS,
label = NAME),
hjust=-0.1, vjust = 0, bg.color = "white") +
# use the palette Safe from the rcartocolor package
scale_color_jcolors(palette = "pal8") +
facet_wrap(~NAME, ncol = 2) +
theme_bw() +
# customise the theme a bit more
theme(
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
# remove legend
legend.position = "none",
# change margin size
plot.margin = margin(1,1,1,1,"mm")) +
labs(x = "Month",
y = "Dementia diagnoses rate",
title = "Dementia diagnose rates in England",
caption = "Data Source: NHS") +
transition_reveal(DATE) #activates display of time series
animate(gr_int2, #control speed of animation
fps = 7, #control immediate repetition of animation, so viewers have time to digest trends
end_pause = 35)
gr_int3 <- ggplot(data = df_proc,
mapping = aes(x = DATE,
y = DIAG_RATE_65_PLUS,
colour = NAME)) +
#customise y axis
ylim(c(50, 80)) +
scale_x_date(limits = as.Date(c("2016-05-31","2021-04-30")), date_breaks = "6 month", date_labels =  "%b %Y", expand = c(0.02,0)) +
#use geom_line to show regions as lines
geom_line(size = 1, alpha =0.9) +
geom_hline(yintercept = 66.7, linetype = 2, size = 1, colour = "black") +
annotate("text", x = as.Date("2016-12-31"), 66.7, vjust = -0.5, label = "Benchmark rate", size = 4,) +
# use the palette Safe from the rcartocolor package
scale_color_brewer(palette = "Spectral") +
#customise theme to plain black and white
theme_bw() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
# change margin size, value order top, right, bottom, left
plot.margin = margin(1,1,1,1,"mm")) +
#assign labels
labs(x = "Month",
y = "Dementia diagnoses rate",
title = "Dementia diagnosis rates in England",
caption = "Data Source: NHS")
ggplotly() %>%
style(textposition = "top")
rename(df_proc, Date = DATE)
# rename
df_int <- df_proc %>%
rename(Date = DATE, Location = NAME, Rate = DIAG_RATE_65_PLUS)
rename(df_proc, Date = DATE, Location = NAME, Rate = DIAG_RATE_65_PLUS)
